name: Build packages
on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [ published ]
  pull_request:
jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Set up Conan
        run: conan profile detect
      - name: Conan install
        run: conan install . --output-folder=build --build=missing
      - name: CMake configure (macOS, Linux)
        if: ${{ matrix.os }} != windows-latest
        run: cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
        working-directory: build
      - name: CMake configure (Windows)
        if: ${{ matrix.os }} == windows-latest
        run: cmake .. -G "Visual Studio 17 2022" -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
        working-directory: build
      - name: CMake build (macOS, Linux)
        if: ${{ matrix.os }} != windows-latest
        run: cmake --build . --target tests
        working-directory: build
      - name: CMake build (Windows)
        if: ${{ matrix.os }} == windows-latest
        run: cmake --build . --config Release --target tests
        working-directory: build
      - name: CTest
        run: ctest --output-on-failure
        working-directory: build
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            package: aar
            target: android
          - os: windows-latest
            package: nuget
            target: windows
          - os: windows-latest
            package: aar
            target: android
          - os: macos-latest
            package: aar
            target: android
          - os: macos-latest
            package: swiftpackage
            target: ios ios_simulator macos
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        if: ${{ matrix.target }} == android
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'
      - run: pip install -r requirements.txt
      - name: Set up Conan
        run: conan profile detect
      - name: Build Package
        run: pydjinni package ${{ matrix.package }} ${{ matrix.target }}
